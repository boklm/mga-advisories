#!/usr/bin/perl -w

use strict;
use MGA::Advisories;
use Template;

my %actions = (
    mksite => \&mksite,
    new    => \&newadv,
    usage  => \&usage,
);

my %usage = (
    mksite => <<END,
$0 mksite

Generates the advisories web site
END
    usage => <<END,
$0 usage [action]

Show action usage
END
    new   => <<END,
$0 new [type] [bugnum]

Create a new advisory file. [type] should be security or bugfix and
[bugnum] is the bugzilla bug number.
END
);

sub usage {
    if ($_[1] && $usage{$_[1]}) {
        print STDERR $usage{$_[1]};
    } else {
        print STDERR "$0 [action] [options]\n";
        print STDERR "$0 usage [action]\n\n";
        print STDERR "Available actions:\n";
        print STDERR map { " - $_\n" } keys %actions;
    }
}
sub usageexit {
    usage(@_);
    exit 1;
}

sub mksite {
    my %advdb;
    $advdb{advisories} = MGA::Advisories::get_advisories();
    MGA::Advisories::publish_advisories(\%advdb);
    MGA::Advisories::sort_advisories(\%advdb);
    MGA::Advisories::output_pages(\%advdb);
    MGA::Advisories::dumpdb(\%advdb);
    MGA::Advisories::send_adv_mail(\%advdb);
    MGA::Advisories::send_report_mail(\%advdb);
}

sub newadv {
    usageexit('usage', $_[0]) unless @_ == 3;
    my ($new, $type, $bugnum) = @_;
    my $file = MGA::Advisories::newadv($type, $bugnum);
    if ($file) {
        my $editor = $ENV{EDITOR} || $ENV{VISUAL} || '/usr/bin/editor';
        system($editor, $file);
    }
}

if (@ARGV == 0 || !$actions{$ARGV[0]}) {
    usageexit();
}
$actions{$ARGV[0]}->(@ARGV);

