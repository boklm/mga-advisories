#!/usr/bin/perl -w

use strict;
use MGA::Advisories;
use Template;

my %actions = (
    list   => {
        run   => \&listadv,
        descr => 'List advisories',
        usage => <<END,
$0 list

Print the list of published advisories
END
    },
    mksite => {
        run   => \&mksite,
        descr => 'Generates the advisories web site',
        usage => <<END,
$0 mksite

Generates the advisories web site
END
    },
    new    => {
        run   => \&newadv,
        descr => 'Create a new advisory file',
        usage => <<END,
$0 new [type] [bugnum]

Create a new advisory file. [type] should be security or bugfix and
[bugnum] is the bugzilla bug number.
END
    },
    show   => {
        run   => \&showadv,
        descr => 'Show an advisory',
        usage => <<END,
$0 show [ID]

Show an advisory.
END
    },
    update => {
        run   => \&updateadv,
        descr => 'Update the advisories database',
        usage => <<END,
$0 update

Update the advisories database.
END
    },
    usage  => {
        run   => \&usage,
        descr => 'Show usage informations for an action',
        usage => <<END,
$0 usage [action]

Show action usage
END
    },
);

sub usage {
    if ($_[1] && $actions{$_[1]}) {
        print STDERR $actions{$_[1]}->{usage};
    } else {
        print STDERR "$0 [action] [options]\n";
        print STDERR "$0 usage [action]\n\n";
        print STDERR "Available actions:\n";
        print STDERR map { " - $_ : $actions{$_}->{descr}\n" } keys %actions;
    }
}
sub usageexit {
    usage(@_);
    exit 1;
}

sub mksite {
    my %advdb;
    $advdb{advisories} = MGA::Advisories::get_advisories();
    MGA::Advisories::publish_advisories(\%advdb);
    MGA::Advisories::sort_advisories(\%advdb);
    MGA::Advisories::output_pages(\%advdb);
    MGA::Advisories::dumpdb(\%advdb);
    MGA::Advisories::send_adv_mail(\%advdb);
    MGA::Advisories::send_report_mail(\%advdb);
}

sub newadv {
    usageexit('usage', $_[0]) unless @_ == 3;
    my ($new, $type, $bugnum) = @_;
    my $file = MGA::Advisories::newadv($type, $bugnum);
    if ($file) {
        my $editor = $ENV{EDITOR} || $ENV{VISUAL} || '/usr/bin/editor';
        system($editor, $file);
    }
}

sub listadv {
    usageexit('usage', $_[0]) unless @_ == 1;
    my %advdb;
    $advdb{advisories} = MGA::Advisories::get_advisories();
    MGA::Advisories::listadv(\%advdb);
}

sub showadv {
    usageexit('usage', $_[0]) unless @_ == 2;
    my $adv = $_[1];
    my %advdb;
    $advdb{advisories} = MGA::Advisories::get_advisories();
    MGA::Advisories::showadv(\%advdb, $adv);
}

sub updateadv {
    usageexit('usage', $_[0]) unless @_ == 1;
    MGA::Advisories::download_advisories;
}

if (@ARGV == 0 || !$actions{$ARGV[0]}) {
    usageexit();
}
$actions{$ARGV[0]}->{run}->(@ARGV);

